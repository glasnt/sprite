
from PIL import Image

def quantizetopalette(silf, palette, dither=False):
    """Convert an RGB or L mode image to use a given P image's palette."""

    silf.load()

    # use palette from reference image
    palette.load()
    if palette.mode != "P":
        raise ValueError("bad mode for palette image")
    if silf.mode != "RGB" and silf.mode != "L":
        raise ValueError(
            "only RGB or L mode images can be quantized to a palette"
            )
    im = silf.im.convert("P", 1 if dither else 0, palette.im)
    # the 0 above means turn OFF dithering

    # Later versions of Pillow (4.x) rename _makeself to _new
    try:
        return silf._new(im)
    except AttributeError:
        return silf._makeself(im)

## TODO - get this as a listo f colours in wool
#palettedata = [0, 0, 0, 102, 102, 102, 176, 176, 176, 255, 255, 255]

#with open("wool.json") as f:
#    palettedata = f.readline()
#
#import pdb; pdb.set_trace()
# 256 * 3 length palette dat aonly


"""
putpalette(palette) where the image should have mode “P” or “L”, and palette is either a sequence of integers, or a string containing a binary representation of the palette.
In both cases, the palette contents should be ordered (r, g, b, r, g, b, …). The palette can contain up to 768 entries (3*256). If a shorter palette is given, it is padded with zeros.
"""

#http://effbot.org/zone/creating-palette-images.htm

palettedata = [121, 96, 71, 226, 160, 153, 135, 85, 57, 192, 200, 64, 144, 195, 204, 57, 105, 135, 247, 151, 111, 238, 252, 252, 130, 38, 55, 148, 99, 26, 145, 123, 115, 253, 237, 84, 197, 106, 91, 200, 216, 184, 94, 107, 71, 44, 89, 124, 221, 216, 203, 197, 73, 137, 132, 132, 132, 6, 227, 230, 131, 151, 95, 115, 139, 91, 183, 157, 167, 106, 133, 158, 217, 235, 241, 236, 236, 236, 231, 226, 211, 207, 121, 57, 4, 196, 202, 228, 236, 212, 230, 232, 232, 173, 167, 199, 86, 106, 106, 62, 133, 162, 194, 129, 66, 82, 179, 174, 186, 74, 74, 142, 144, 120, 255, 163, 43, 245, 173, 173, 255, 191, 87, 247, 203, 191, 154, 124, 92, 37, 59, 115, 171, 51, 87, 227, 109, 109, 127, 179, 53, 130, 52, 10, 228, 187, 142, 92, 114, 148, 5, 6, 5, 1, 7, 250, 246, 240, 183, 191, 221, 210, 159, 195, 188, 154, 120, 138, 110, 78, 171, 171, 171, 166, 194, 152, 224, 232, 104, 97, 122, 82, 162, 214, 173, 17, 65, 109, 210, 188, 166, 172, 216, 226, 221, 227, 227, 63, 143, 41, 188, 85, 68, 122, 69, 31, 24, 144, 101, 203, 182, 156, 209, 186, 161, 69, 92, 113, 98, 113, 51, 220, 156, 86, 119, 107, 152, 255, 189, 189, 28, 80, 102, 158, 207, 52, 174, 191, 121, 50, 102, 124, 20, 170, 208, 199, 209, 219, 255, 233, 173, 136, 21, 49, 140, 140, 140, 199, 230, 102, 56, 76, 94, 70, 106, 142, 184, 119, 72, 141, 120, 75, 72, 142, 154, 219, 169, 178, 250, 50, 3, 114, 132, 60, 79, 75, 65, 161, 75, 81, 253, 156, 151, 141, 166, 117, 92, 84, 120, 57, 111, 82, 187, 195, 217, 71, 129, 165, 255, 173, 188, 219, 190, 127, 179, 95, 43, 91, 163, 179, 255, 231, 147, 178, 212, 189, 64, 82, 48, 107, 87, 67, 18, 174, 186, 19, 71, 125, 255, 123, 77, 54, 31, 14, 248, 202, 200, 255, 181, 21, 123, 0, 27, 30, 17, 8, 189, 221, 237, 103, 85, 65, 184, 157, 100, 52, 127, 140, 101, 57, 25, 134, 48, 34, 164, 131, 92, 183, 139, 97, 253, 93, 53, 253, 215, 85, 148, 140, 54, 247, 167, 119, 226, 115, 35, 163, 123, 167, 52, 125, 117, 91, 144, 113, 148, 96, 131, 215, 203, 211, 253, 249, 205, 255, 87, 115, 248, 228, 200, 198, 98, 24, 255, 176, 190, 27, 83, 0, 145, 53, 70, 242, 227, 206, 245, 236, 203, 167, 19, 43, 148, 168, 198, 238, 211, 196, 234, 134, 153, 220, 196, 170, 7, 115, 27, 179, 47, 72, 188, 227, 230, 235, 183, 175, 231, 73, 103, 243, 206, 117, 148, 171, 79, 114, 55, 93, 205, 157, 55, 215, 206, 203, 160, 108, 80, 255, 164, 190, 199, 43, 59, 87, 36, 51, 219, 85, 110, 219, 236, 245, 189, 155, 81, 32, 95, 46, 255, 226, 207, 135, 125, 115, 229, 92, 31, 216, 228, 152, 229, 252, 253, 171, 177, 151, 228, 180, 104, 255, 241, 175, 206, 145, 36, 179, 59, 75, 131, 91, 139, 255, 226, 226, 166, 167, 93, 75, 60, 42, 242, 120, 66, 98, 75, 69, 235, 99, 7, 255, 238, 227, 73, 179, 161, 152, 145, 182, 95, 102, 72, 217, 137, 120, 176, 192, 218, 114, 130, 86, 14, 54, 92, 188, 108, 100, 76, 88, 38, 229, 206, 151, 125, 93, 87, 243, 225, 215, 255, 200, 64, 247, 187, 119, 85, 120, 34, 152, 174, 174, 88, 113, 65, 155, 19, 89, 111, 47, 0, 205, 47, 99, 66, 66, 66, 150, 158, 126, 251, 191, 194, 143, 156, 193, 189, 203, 203, 204, 132, 124, 149, 111, 124, 73, 42, 19, 233, 106, 103, 227, 29, 66, 255, 121, 140, 203, 144, 81, 246, 220, 152, 166, 69, 16, 27, 40, 83, 92, 24, 78, 174, 119, 32, 183, 115, 127, 127, 106, 85, 160, 112, 66, 98, 138, 40, 70, 69, 99, 223, 179, 187, 27, 157, 107, 196, 205, 172, 255, 211, 181, 163, 174, 209, 236, 204, 158, 33, 48, 99, 166, 136, 129, 201, 107, 112, 198, 159, 123, 150, 74, 63, 126, 177, 200, 108, 108, 108, 255, 145, 145, 199, 192, 119, 62, 182, 161, 192, 179, 174, 226, 72, 116, 116, 142, 182, 173, 114, 57, 204, 183, 132, 209, 209, 209, 59, 118, 143, 188, 180, 172, 255, 178, 187, 110, 101, 92, 209, 88, 7, 244]


import sys
fn = sys.argv[1]

palimage = Image.new('P', (20,20))
palimage.putpalette(palettedata)
oldimage = Image.open(fn)
oldimage = oldimage.convert('RGB')

newimage = quantizetopalette(oldimage, palimage, dither=False)

newimage.save("_"+fn)
newimage.show()
